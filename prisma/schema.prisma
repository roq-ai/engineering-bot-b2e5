generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model mentor_feedback {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mentor_id  String   @db.Uuid
  roadmap_id String   @db.Uuid
  feedback   String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [mentor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  roadmap    roadmap  @relation(fields: [roadmap_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roadmap {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String             @db.VarChar(255)
  field            String             @db.VarChar(255)
  team_member_id   String             @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  mentor_feedback  mentor_feedback[]
  user             user               @relation(fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student_progress student_progress[]
}

model student_progress {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  student_id String   @db.Uuid
  roadmap_id String   @db.Uuid
  progress   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roadmap    roadmap  @relation(fields: [roadmap_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  company          company[]
  mentor_feedback  mentor_feedback[]
  roadmap          roadmap[]
  student_progress student_progress[]
}
